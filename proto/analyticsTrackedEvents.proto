syntax = "proto3";

package rv.analytics.trackedevents;


option cc_enable_arenas = true;
option csharp_namespace = "Pro.SerializationInterop.RVProtoData.Analytics.TrackedEvents";
option swift_prefix = "Analytics_TrackedEvents_";

message GenericEvent {
}

message ApplicationLaunch {
  string hardware_id = 1;
  .rv.analytics.trackedevents.ApplicationLaunch.Channel channel = 2;
  .rv.analytics.trackedevents.ApplicationLaunch.Platform platform = 3;
  string app_version = 4;
  string os_version = 5;
  string build_number = 6;
  string location = 7;
  string language = 8;
  string hardware_model = 9;
  uint64 physical_memory = 10;
  string video_controller = 11;
  uint64 video_controller_ram = 12;

  enum Channel {
    BETA = 0;
    RELEASE = 1;
  }

  enum Platform {
    WINDOWS = 0;
    MACOS = 1;
  }
}

message VideoInputTriggered {
  .rv.analytics.trackedevents.VideoInputTriggered.AudioSource audio_source = 1;

  enum AudioSource {
    NONE = 0;
    SELF = 1;
    OTHER = 2;
  }
}

message VideoInputCustomMap {
  bool value = 1;
}

message VideoInputStartUp {
  uint32 input_count = 1;
}

message VideoInputThumbnailUpdate {
  .rv.analytics.trackedevents.VideoInputThumbnailUpdate.UpdateType type = 1;

  enum UpdateType {
    CAPTURE = 0;
    DISK = 1;
    RESET = 2;
  }
}

message AudioInputAutoOnChange {
  uint32 input_count = 1;
}

message AudioSettingsSdiNdiActive {
  bool value = 1;
}

message AudioSettingsCustomMap {
  bool value = 1;
}

message AudioInputModeSelection {
  .rv.analytics.trackedevents.AudioInputModeSelection.ModeType mode_type = 1;

  enum ModeType {
    ON = 0;
    OFF = 1;
    AUTOOFF = 2;
    AUTOON = 3;
  }
}

message AudioInputAutoOnStartup {
  uint32 input_count = 1;
}

message AudioSettingsSdiNdiState {
  uint32 bus_count = 1;
}

message AudioInputStartUp {
  uint32 total_input_count = 1;
  uint32 on_input_count = 2;
  uint32 off_input_count = 3;
  uint32 auto_on_input_count = 4;
  uint32 auto_off_input_count = 5;
}

message CueTriggered {
  double trigger_delay = 1;
}

message InputAudioMonitoring {
  .rv.analytics.trackedevents.InputAudioMonitoring.InputType type = 1;

  enum InputType {
    AUDIO = 0;
    VIDEO = 1;
  }
}

message ResiStartUp {
}

message ResiLoginChange {
  .rv.analytics.trackedevents.ResiLoginChange.LoginState state = 1;

  enum LoginState {
    LOGGEDIN = 0;
    LOGGEDOUT = 1;
  }
}

message RemoteStreamStart {
  .rv.analytics.trackedevents.RemoteStreamStart.StartResult result = 1;

  enum StartResult {
    SUCCESS = 0;
    FAILED = 1;
    USERCANCELED = 2;
  }
}

message RemoteStreamStop {
  bool success = 1;
}

message StartCaptureDisk {
  .rv.analytics.trackedevents.Codec codec = 1;
  uint32 resolution_width = 2;
  uint32 resolution_height = 3;
  .rv.analytics.trackedevents.FrameRate frame_rate = 4;
  bool stream_started = 5;
  uint32 video_bitrate = 6;
}

message StartCaptureRtmp {
  .rv.analytics.trackedevents.Codec codec = 1;
  uint32 resolution_width = 2;
  uint32 resolution_height = 3;
  .rv.analytics.trackedevents.FrameRate frame_rate = 4;
  bool stream_started = 5;
  uint32 video_bitrate = 6;
}

message StartCaptureResi {
  .rv.analytics.trackedevents.Codec codec = 1;
  uint32 resolution_width = 2;
  uint32 resolution_height = 3;
  .rv.analytics.trackedevents.FrameRate frame_rate = 4;
  bool stream_started = 5;
  uint32 video_bitrate = 6;
}

message StopCapture {
  double duration = 1;
  int32 dropped_frames = 2;
  double percent_dropped_frames = 3;
}

message Print {
  uint32 document_count = 1;
  .rv.analytics.trackedevents.Print.PrintMode mode = 2;
  bool include_metadata = 3;
  bool include_presentation_notes = 4;
  bool include_currentDate = 5;
  bool include_slide_labels = 6;
  bool include_slide_notes = 7;
  bool include_disabled_slides = 8;
  uint32 number_columns = 9;
  string print_to_device = 10;

  enum PrintMode {
    THUMBNAIL = 0;
    OUTLINE = 1;
  }
}

message Device {
  string protocol = 1;
  string device_name = 2;
  string device_protocol = 3;
}

message Downgrade {
  .rv.analytics.trackedevents.Downgrade.FromVersionType from_version_type = 1;

  enum FromVersionType {
    FROM_VERSION_TYPE_UNKNOWN = 0;
    FROM_VERSION_TYPE_BETA = 1;
    FROM_VERSION_TYPE_RELEASE = 2;
  }
}

message CCLIReport {
  .rv.analytics.trackedevents.CCLIReport.Action action = 1;

  enum Action {
    REPORT_WINDOW_OPENED = 0;
    REPORT_CLEARED = 1;
    REPORT_EXPORTED = 2;
  }
}

message TransitionWindow {
  uint32 duration_seconds = 1;
}

message EditorObjectAdded {
  .rv.analytics.trackedevents.EditorObjectAdded.FromInsertionSource from_insertion_source = 1;
  .rv.analytics.trackedevents.EditorObjectAdded.InsertedType inserted_type = 2;

  enum FromInsertionSource {
    EDITOR_TOOLBAR = 0;
    EDITOR_MAIN_MENU = 1;
    EDITOR_HOTKEY = 2;
    EDITOR_COPY_PASTE = 3;
  }

  enum InsertedType {
    EDITOR_TEXT = 0;
    EDITOR_SHAPE = 1;
    EDITOR_CUSTOM_SHAPE = 2;
    EDITOR_MEDIA = 3;
    EDITOR_VIDEO_INPUT = 4;
    EDITOR_WEB = 5;
    EDITOR_CURRENT_SLIDE = 6;
    EDITOR_NEXT_SLIDE = 7;
    EDITOR_SCREEN_PREVIEW = 8;
    EDITOR_TIMER = 9;
    EDITOR_SYSTEM_CLOCK = 10;
    EDITOR_VIDEO_COUNTDOWN = 11;
    EDITOR_AUDIO_COUNTDOWN = 12;
    EDITOR_PLAYBACK_MARKER = 13;
    EDITOR_CHORD_CHART = 14;
    EDITOR_STAGE_MESSAGE = 15;
    EDITOR_PLANNING_CENTER_LIVE = 16;
    EDITOR_TIMECODE = 17;
    EDITOR_GROUP = 18;
    EDITOR_LABEL = 19;
    EDITOR_CAPTURE_STATUS = 20;
  }
}
